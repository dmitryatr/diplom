@using Diplom.Models
@model AddProductViewModel
@{
    Html.EnableClientValidation(false);
}


@using (Ajax.BeginForm("AddProduct", new AjaxOptions { UpdateTargetId = "dialogContent", OnSuccess = "OnSuccess" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title" id="label">Новое объявление</h4>
        </div>
        <div class="modal-body">
            @Html.HiddenFor(m => m.ProductId)
            <div class="row mb-3">
                <div class="col-12">
                    @Html.LabelFor(m => m.Name)
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите заголовок для объявления" } })
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    @Html.LabelFor(m => m.CategoryName)
                    <div class="w-100" style="position:relative;">
                        <div class="input-group">
                            @Html.EditorFor(m => m.CategoryName, new { htmlAttributes = new { @class = "form-control", placeholder = "Выберите категорию" } })
                            <div class="input-group-prepend" id="arrow">
                                <span class="input-group-text" style="border-bottom-right-radius: 0.25rem; border-top-right-radius: 0.25rem">
                                    <i class="fa fa-sort-desc"></i>
                                </span>
                            </div>
                        </div>
                        @Html.Action("Categories", "Products")
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <label>Фотографии</label>
                    <div id="mydropzone" class="dropzone">
                        <div class="dz-default dz-message"><span>Перетащите файлы сюда для загрузки</span></div>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, 5, 9, new { @class = "form-control", placeholder = "Описание товара (характеристик, состояния и прочего)" })
                    @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-3">
                    @Html.LabelFor(m => m.Type)
                    <div class="custom-control custom-radio">
                        <input type="radio" checked id="radio1" name="Type" class="custom-control-input">
                        <label class="custom-control-label" for="radio1">Продажа</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="radio2" name="Type" class="custom-control-input">
                        <label class="custom-control-label" for="radio2">Покупка</label>
                    </div>
                </div>
                <div class="col-4">
                    @Html.LabelFor(m => m.City)
                    @Html.EditorFor(m => m.City, new { htmlAttributes = new { @class = "form-control", placeholder = "Укажите город", value = "Минск" } })
                    @Html.ValidationMessageFor(m => m.City, null, new { @class = "text-danger" })
                </div>
                <div class="col-4 offset-1">
                    @Html.LabelFor(m => m.State)
                    @Html.DropDownListFor(m => m.State, new SelectList(new string[] { "Новое", "Хорошее", "С дефектами", "Сломано" }), new { @class = "custom-select" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-6">
                    @Html.LabelFor(m => m.Price)
                    @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Укажите цену" } })
                    @Html.ValidationMessageFor(m => m.Price, null, new { @class = "text-danger" })
                </div>
                <div class="col-6" id="darom">
                    <label for="switch">Отдам даром</label>
                    <div class="checkbox checkbox-primary checkbox-circle">
                        <input id="switch" type="checkbox" class="js-switch">
                    </div>
                </div>
            </div>
            <div class="row mb-3" id="payment">
                <div class="col-12">
                    @Html.LabelFor(m => m.Payment)
                    <select class="sel-multiple" multiple name="Payment">
                        <option>Наличными при встрече</option>
                        <option>Наложенным платежом при отправке почтой</option>
                        <option>Банковский перевод</option>
                        <option>Электронные деньги</option>
                    </select>
                    @Html.ValidationMessageFor(m => m.Payment, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    @Html.LabelFor(m => m.Delivery)
                    <select class="sel-multiple2" multiple name="Delivery">
                        <option selected>Самовывоз</option>
                        <option selected>При встрече</option>
                        <option>Моя доставка</option>
                        <option>Отправка почтой</option>
                        <option>Служба доставки</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary waves-effect" data-dismiss="modal">Отмена</button>
            <button type="submit" class="btn btn-primary waves-effect waves-light">Добавить</button>
        </div>
    </div>
    <script>
        var elem = document.querySelector('.js-switch');
        var init = new Switchery(elem, { color: '#28a5d4' });
        $(document).ready(function () {
            $('.sel-multiple').select2({
                placeholder: "Выберите способ оплаты"
            });
            $('.sel-multiple2').select2({
                placeholder: "Выберите способ доставки"
            });
            $('#switch').change(function () {
                if ($(this).is(':checked')) {
                    $('#payment').addClass('d-none');
                }
                else {
                    $('#payment').removeClass('d-none');
                }
            });
            $('#radio1').click(function () {
                if ($(this).is(':checked')) {
                    console.log(true);
                    $('#darom').removeClass('d-none');
                }
            });
            $('#radio2').click(function () {
                if ($(this).is(':checked')) {
                    console.log(false);
                    $('#darom').addClass('d-none');
                    $('#payment').removeClass('d-none');
                    if ($('#switch').is(':checked')) {
                        $('#switch').click();
                    }
                }
            });
            $('#CategoryName').click(function () {
                $('#categories').removeClass('d-none');
            });
            $('#arrow').click(function () {
                if ($('#categories').hasClass('d-none')) {
                    $('#categories').removeClass('d-none');
                }
                else {
                    $('#categories').addClass('d-none');

                }
            });
            $('.cat-name').click(function () {
                $('#categories').addClass('d-none');
                $('#CategoryName').val($(this).text());
            });
            $('.plus').click(function () {
                if ($(this).hasClass('open-tree')) {
                    $(this).removeClass('open-tree');
                    $(this).siblings('.child').addClass('d-none');
                    $(this).children().addClass('fa-plus').removeClass('fa-minus');
                }
                else {
                    $(this).siblings('.child').removeClass('d-none');
                    $(this).children().removeClass('fa-plus').addClass('fa-minus');
                    $(this).addClass('open-tree');
                }
            });
        });
        var myDropZone = new Dropzone('#mydropzone', { url: '/Products/Upload' });
        myDropZone.options.addRemoveLinks = true;
        myDropZone.options.uploadMultiple = true;
        myDropZone.options.maxFiles = 5;
        myDropZone.options.acceptedFiles = 'image/*';
        myDropZone.on("removedfile", function (file) {
            var data = { 'name': file.name };
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Products")',
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            });
            //$('.dz-remove').last().attr('href', '/Account/Delete?name=' + $('.dz-filename').last().text());
        });
        $('.close').click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteAll", "Products")',
                contentType: false,
                dataType: false
            });
        });
    </script>
}


